{
  "name": "Bluetooth-remote-control",
  "tagline": "Bluetooth Low Energy remote control based on NRF 51 DK board with an additional display capability",
  "body": "# Bluetooth Remote Control\r\n\r\nhttps://akinaru.github.io/bluetooth-remote-control\r\n\r\n[![Build Status](https://travis-ci.org/akinaru/bluetooth-remote-control.svg?branch=master)](https://travis-ci.org/akinaru/bluetooth-remote-control)\r\n[![License](http://img.shields.io/:license-mit-blue.svg)](LICENSE.md)\r\n\r\n[![Download Bluetooth Remote Control from Google Play](http://www.android.com/images/brand/android_app_on_play_large.png)](https://play.google.com/store/apps/details?id=com.github.akinaru.bleremote)\r\n[![Download latest debug from drone.io](https://raw.githubusercontent.com/kageiit/images-host/master/badges/drone-io-badge.png)](https://drone.io/github.com/akinaru/bluetooth-remote-control/files/android/app/build/outputs/apk/app-debug.apk)\r\n\r\nBluetooth Low Energy remote control based on DK51 board from Nordic Semiconductor with ST7735 1.8 Oled LCD from Adafruit\r\n\r\n## Features\r\n\r\n* HID Service BLE over GATT for full compatibility with Android TV :\r\n * keyboard control :\r\n    * up / down / left / right\r\n    * escape (back)\r\n * consumer control :\r\n    * AC Search\r\n    * AC Home\r\n    * Play/Pause (Android custom keycode) \r\n\r\n* Custom Display Service used to receive a compressed bitmap over GATT :\r\n * compressed bitmap is stored temporarily on device flash & removed afterward\r\n * bitmap format is 128*160 fastlz compressed with block of 4096 octet\r\n * regular characteristic write is used (not long write)\r\n\r\n* Android application can be used to test :\r\n * hid keys notification\r\n * command led states on DK51 board\r\n * send a bitmap to be displayed on adafruit OLED module\r\n\r\n* works fine on Android / Android TV \r\n\r\n* works on Apple TV but some keycode differ (consumer control)\r\n\r\n* this project doesn't implement any Audio Service for Voice Search \r\n\r\n## Mode 1 : Android testing application\r\n\r\n![mode1](img/mode2.gif)\r\n\r\n## Mode 2 : BLE HID Service mode\r\n\r\n![mode2](img/mode1.gif)\r\n\r\nYou can't combined Mode 1 & Mode 2 simultaneously.\r\n\r\n## Project structure\r\n\r\n* <b>/firmware</b> - microcontroller code written for NRF DK51 board\r\n* <b>/android</b> - android application to control device\r\n\r\n## Hardware setup\r\n\r\n* NRF51 DK board \r\n  * nrf51822 chipset based on an ARM Cortex M0 processor (128kB flash memory / 16kB RAM)\r\n\r\n![board](img/DK.jpg)\r\n\r\n* Adafruit 1.8\" Color TFT Shield with Joystick\r\n\r\n![lcd](img/adafruit_oled.jpg)\r\n\r\n## Hardware installation\r\n\r\n![hw](img/hw.jpg)\r\n\r\n`RST` is linked to `VDD`\r\n\r\n## Build\r\n\r\n### Get source code\r\n\r\n```\r\ngit clone git@github.com:akinaru/bluetooth-remote-control.git\r\ncd bluetooth-remote-control\r\ngit submodule update --init --recursive\r\n```\r\n\r\n### Configuration\r\n\r\n* armgcc toolchain\r\n* sofdevice s130\r\n* nRF5 SDK 11.0.0\r\n\r\n### Setup / Installation\r\n\r\n* follow SDK/Toolchain Installation steps section of <a href=\"https://gist.github.com/akinaru/a38315c5fe79ec5c8c6a9ed90b8df260#installation-steps\">this tutorial</a>\r\n\r\n* specify NRF51 SDK directory with :\r\n\r\n```\r\nexport NRF51_SDK_DIR=/path/to/sdk\r\n```\r\n\r\n### Build & flash firmware\r\n\r\n```\r\ncd firmware\r\nmake\r\nmake flash_softdevice\r\nmake flash\r\n```\r\n\r\n### Build Android App\r\n\r\n```\r\ncd android\r\n./gradlew build\r\n```\r\n\r\n## External library\r\n\r\n### Firmware\r\n\r\n* NRF 51 SDK 11.0.0 : https://www.nordicsemi.com/eng/Products/Bluetooth-low-energy/nRF5-SDK\r\n* fastlz compression library : https://github.com/ariya/FastLZ\r\n* Integration of Adafruit OLED ST7735 1.8 display on NRF51 DK board : https://github.com/akinaru/adafruit-oled-st7735-dk51\r\n\r\n### Android application\r\n\r\n* Android crop image library : https://github.com/lvillani/android-cropimage\r\n* Simple vertical and horizontal color picker : https://github.com/DASAR/ShiftColorPicker\r\n* fastlz compression library : https://github.com/ariya/FastLZ\r\n* appcompat-v7, design & recyclerview-v7\r\n\r\n### External links\r\n\r\n* USB HID keycode : http://www.freebsddiary.org/APC/usb_hid_usages.php\r\n* Android HID keycode/keyevent mapping : https://source.android.com/devices/input/keyboard-devices.html\r\n\r\n## License\r\n\r\nThe MIT License (MIT) Copyright (c) 2016 Bertrand Martel",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}